import { fal } from "@fal-ai/client";
import { NextResponse } from "next/server";

// In-memory cache to store the latest image URL
let latestImageUrl = null;

export async function POST() {
  try {
    const stream = await fal.stream("workflows/bakursky/landscape-image-generation", {
      input: {},
    });

    let imageUrl = null;
    let streamCompleted = false;

    for await (const event of stream) {
      if (event.type === "completion" && event.output?.images?.length > 0) {
        imageUrl = event.output.images[0]?.url;
      }
    }

    await stream.done();
    streamCompleted = true;

    if (!streamCompleted || !imageUrl || !imageUrl.startsWith("http")) {
      throw new Error("No valid Image URL was generated by the workflow.");
    }

    // Update the in-memory cache with the latest URL
    latestImageUrl = imageUrl;
    console.log("Latest image URL cached:", latestImageUrl);

    return NextResponse.json({ success: true, imageUrl });
  } catch (error) {
    console.error("Error in workflow processing:", error);
    return NextResponse.json({ success: false, error: error.message });
  }
}
